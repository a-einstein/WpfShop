<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:Controls="clr-namespace:RCS.WpfShop.Common.Controls"
    >
    
    <!--TODO Should be broken up over Modules.-->

    <!--Thickness-->
    
    <Thickness x:Key="StandardMargin">2</Thickness>
    <Thickness x:Key="StandardHorizontalSeparation">2,0,3,0</Thickness>
    <Thickness x:Key="StandardPadding">3</Thickness>

    <!--FontSize-->

    <!--Note that about 12 is the default size.-->
    <system:Double x:Key="MediumFontSize">12</system:Double>
    <system:Double x:Key="LargeFontSize">16</system:Double>
    <system:Double x:Key="ExtraLargeFontSize">21</system:Double>
    <system:Double x:Key="SuperLargeFontSize">28</system:Double>

    <!--Color-->
    
    <Color x:Key="MessageColour">#00008B</Color> <!--DarkBlue-->
    <Color x:Key="AssertColour">green</Color>
    <Color x:Key="WarningColour">orange</Color>
    <Color x:Key="ErrorColour">red</Color>
    <Color x:Key="ErrorBackgroundColour">#FFFFBFBF</Color> <!--quarter red = pink-->
    <Color x:Key="InputBackgroundColour">white</Color>
    <Color x:Key="LabelForegroundColour">#2F4F4F</Color> <!--DarkSlateGray-->
    <Color x:Key="ValueForegroundColour">#00008B</Color> <!--DarkBlue-->

    <!--Brush-->
    
    <SolidColorBrush x:Key="MessageForegroundBrush" Color="{StaticResource MessageColour}"/>
    <SolidColorBrush x:Key="AssertForegroundBrush" Color="{StaticResource AssertColour}"/>
    <SolidColorBrush x:Key="WarningBackgroundBrush" Color="{StaticResource WarningColour}"/>
    <SolidColorBrush x:Key="ErrorForegroundBrush" Color="{StaticResource ErrorColour}"/>
    <SolidColorBrush x:Key="ErrorBackgroundBrush" Color="{StaticResource ErrorBackgroundColour}"/>
    <SolidColorBrush x:Key="InputBackgroundBrush" Color="{StaticResource InputBackgroundColour}"/>
    <SolidColorBrush x:Key="LabelForegroundBrush" Color="{StaticResource LabelForegroundColour}"/>
    <SolidColorBrush x:Key="ValueForegroundBrush" Color="{StaticResource ValueForegroundColour}"/>

    <LinearGradientBrush x:Key="ButtonBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFE0E0E0" Offset="0"/>
        <GradientStop Color="White" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="CartBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFF5F3DB" Offset="0"/>
        <GradientStop Color="White" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProductBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFE2F1FB" Offset="0"/>
        <GradientStop Color="White" Offset="1"/>
    </LinearGradientBrush>

    <DropShadowEffect x:Key="ButtonStandardEffect" BlurRadius="2" ShadowDepth="2" Color="#FFD3D1D1"/>
    <DropShadowEffect x:Key="ButtonHoverEffect" BlurRadius="2" ShadowDepth="2" Color="#FF898888"/>

    <!--ToggleButton-->
    
    <Style x:Key="NavigationButtonStyle" TargetType="ToggleButton">
        <Setter Property="Margin" Value="{StaticResource StandardHorizontalSeparation}"/>
        <Setter Property="Padding" Value="3,1"/>
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}"/>
        <Setter Property="Effect" Value="{StaticResource ButtonStandardEffect}"/>
        <!--TODO get rid of background on MouseOver.-->
        <Style.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="True">
                <Setter Property="ToggleButton.Effect" Value="{StaticResource ButtonHoverEffect}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Border-->
    
    <Style x:Key="BorderStyle" TargetType="Border">
        <Setter Property="Margin" Value="{StaticResource StandardMargin}"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="{StaticResource StandardPadding}"/>
    </Style>

    <!--Image-->
    
    <Style x:Key="ImageStyle" TargetType="Image">
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>

    <!--TextBlock-->

    <Style x:Key="NavigationTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="Purple"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Gainsboro" Offset="1"/>
                    <GradientStop Color="White" Offset="0.5"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
        <Setter Property="Margin" Value="{StaticResource StandardMargin}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="Foreground" Value="{StaticResource LabelForegroundBrush}"/>
    </Style>

    <Style x:Key="EmphasisTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}">
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="HeaderTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource EmphasisTextBlockStyle}">
    </Style>

    <Style x:Key="HeaderExtralargeTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource HeaderTextBlockStyle}">
        <Setter Property="FontSize" Value="{StaticResource ExtraLargeFontSize}"/>
    </Style>

    <Style x:Key="HeaderSuperlargeTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource HeaderTextBlockStyle}">
        <Setter Property="FontSize" Value="{StaticResource SuperLargeFontSize}"/>
    </Style>

    <Style x:Key="HeaderLargeTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource HeaderTextBlockStyle}">
        <Setter Property="FontSize" Value="{StaticResource LargeFontSize}"/>
    </Style>

    <Style x:Key="MessageTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}">
        <Setter Property="Foreground" Value="{StaticResource MessageForegroundBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="LabelTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}">
        <Setter Property="Foreground" Value="{StaticResource LabelForegroundBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
    </Style>

    <Style x:Key="LabelMediumTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource LabelTextBlockStyle}">
        <Setter Property="FontSize" Value="{StaticResource MediumFontSize}"/>
    </Style>

    <Style x:Key="LabelLargeTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource LabelTextBlockStyle}">
        <Setter Property="FontSize" Value="{StaticResource LargeFontSize}"/>
    </Style>

    <Style x:Key="ValueTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}">
        <Setter Property="Foreground" Value="{StaticResource ValueForegroundBrush}"/>
    </Style>

    <Style x:Key="ValueTextMediumBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource ValueTextBlockStyle}">
        <Setter Property="FontSize" Value="{StaticResource MediumFontSize}"/>
    </Style>

    <Style x:Key="ValueDemiEmphasisTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource ValueTextBlockStyle}">
        <Setter Property="FontWeight" Value="DemiBold"/>
    </Style>

    <Style x:Key="ValueDemiEmphasisMediumTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource ValueDemiEmphasisTextBlockStyle}">
        <Setter Property="FontSize" Value="{StaticResource MediumFontSize}"/>
    </Style>

    <Style x:Key="ValueDemiEmphasisLargeTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource ValueDemiEmphasisTextBlockStyle}">
        <Setter Property="FontSize" Value="{StaticResource LargeFontSize}"/>
    </Style>

    <Style x:Key="ValueEmphasisTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource ValueTextBlockStyle}">
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="ValueEmphasisMediumTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource ValueEmphasisTextBlockStyle}">
        <Setter Property="FontSize" Value="{StaticResource MediumFontSize}"/>
    </Style>

    <Style x:Key="ValueEmphasisLargeTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource ValueEmphasisTextBlockStyle}">
        <Setter Property="FontSize" Value="{StaticResource LargeFontSize}"/>
    </Style>

    <!--Note this reduces the line distance by lack of vertical margin.-->
    <Style x:Key="InlineTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}">
        <Setter Property="Margin" Value="{StaticResource StandardHorizontalSeparation}"/>
    </Style>

    <Style x:Key="InlineValueEmphasisTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource InlineTextBlockStyle}">
        <Setter Property="Foreground" Value="{StaticResource ValueForegroundBrush}"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <!--HyperlinkControl-->
    
    <Style x:Key="ValueDemiEmphasisLargeHyperlinkControlStyle" TargetType="Controls:HyperlinkControl">
        <Setter Property="Foreground" Value="{StaticResource ValueForegroundBrush}"/>
        <Setter Property="FontSize" Value="{StaticResource LargeFontSize}"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    
    <!--TextBox-->
    
    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="Margin" Value="{StaticResource StandardMargin}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="Background" Value="{StaticResource InputBackgroundBrush}"/>
    </Style>

    <Style x:Key="LineTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource TextBoxStyle}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="{StaticResource StandardHorizontalSeparation}"/>
    </Style>

    <!--ComboBox-->
    
    <!--TODO Set the Background of the presented item to InputBackgroundBrush. This might need adapting of the ControlTemplate.-->
    <Style x:Key="FilterComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Margin" Value="{StaticResource StandardHorizontalSeparation}"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!--Button-->
    
    <Style x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="Margin" Value="{StaticResource StandardMargin}"/>
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}"/>
        <Setter Property="Effect" Value="{StaticResource ButtonStandardEffect}"/>
        <Style.Triggers>
            <Trigger Property="Button.IsMouseOver" Value="True">
                <Setter Property="Button.Effect" Value="{StaticResource ButtonHoverEffect}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource ButtonStyle}"/>

    <Style x:Key="DetailsButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
    </Style>

    <Style x:Key="DeleteButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="Background" Value="{StaticResource WarningBackgroundBrush}"/>
    </Style>

    <!--IntegerUpDown-->
    
    <Style x:Key="IntegerUpDownStyle" TargetType="xctk:IntegerUpDown">
        <Setter Property="Margin" Value="{StaticResource StandardMargin}"/>
    </Style>

    <!--GridViewColumnHeader-->
    
    <Style x:Key="CartColumnHeaderStyle" TargetType="GridViewColumnHeader">
        <Setter Property="Height" Value="5"/>
    </Style>
</ResourceDictionary>