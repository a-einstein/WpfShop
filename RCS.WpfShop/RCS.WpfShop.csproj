<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<PlatformTarget>AnyCPU</PlatformTarget>
    <!--
    Needed this specific TargetFramework, as (implicit) net8.0-windows7, or some explicit net8.0-windows10, had issues.
    Some only occurring on Azure.
    https://learn.microsoft.com/en-gb/dotnet/standard/frameworks
    -->
		<TargetFramework>net8.0-windows8</TargetFramework>
		<GenerateAssemblyInfo>true</GenerateAssemblyInfo>
		<RuntimeIdentifiers>win-x86</RuntimeIdentifiers>
		<OutputType>WinExe</OutputType>
		<WarningLevel>4</WarningLevel>
		<IsWebBootstrapper>false</IsWebBootstrapper>
		<PublishUrl>..\..\publish\ClickOnce\VisualStudio\1 original\Cyclone.ClickOnce\</PublishUrl>
		<Install>true</Install>
		<InstallFrom>Disk</InstallFrom>
		<UpdateEnabled>false</UpdateEnabled>
		<UpdateMode>Background</UpdateMode>
		<UpdateInterval>7</UpdateInterval>
		<UpdateIntervalUnits>Days</UpdateIntervalUnits>
		<UpdatePeriodically>false</UpdatePeriodically>
		<UpdateRequired>false</UpdateRequired>
		<MapFileExtensions>false</MapFileExtensions>
		<SupportUrl>https://github.com/a-einstein/WpfShop/blob/master/README.md</SupportUrl>
		<ProductName>CyclOne</ProductName>
		<PublisherName>RCS</PublisherName>
		<SuiteName>Shopping</SuiteName>
		<WebPage>install.htm</WebPage>
		<OpenBrowserOnPublish>false</OpenBrowserOnPublish>
		<ApplicationRevision>0</ApplicationRevision>
		<UseApplicationTrust>true</UseApplicationTrust>
		<PublishWizardCompleted>true</PublishWizardCompleted>
		<BootstrapperEnabled>true</BootstrapperEnabled>
		<UseWPF>true</UseWPF>
		<Configurations>Debug;Release;Test;DebugService</Configurations>
		<Platforms>AnyCPU;x86</Platforms>
	</PropertyGroup>
	<PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
		<WarningLevel>2</WarningLevel>
		<UseVSHostingProcess>true</UseVSHostingProcess>
	</PropertyGroup>
	<PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
		<DebugType>none</DebugType>
	</PropertyGroup>
	<PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Test|AnyCPU'">
		<DebugSymbols>true</DebugSymbols>
		<Optimize>false</Optimize>
		<WarningLevel>2</WarningLevel>
		<UseVSHostingProcess>true</UseVSHostingProcess>
	</PropertyGroup>
	<PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'DebugService|AnyCPU'">
		<DebugSymbols>true</DebugSymbols>
		<DefineConstants>CODE_ANALYSIS;DEBUG;TRACE</DefineConstants>
		<WarningLevel>2</WarningLevel>
		<CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
	</PropertyGroup>
	<PropertyGroup>
		<ApplicationIcon>Images\Main.ico</ApplicationIcon>
	</PropertyGroup>
	<PropertyGroup>
		<SignManifests>true</SignManifests>
	</PropertyGroup>
	<PropertyGroup>
		<AssemblyOriginatorKeyFile></AssemblyOriginatorKeyFile>
	</PropertyGroup>
	<ItemGroup>
		<None Include="app.config">
			<SubType>Designer</SubType>
			<CopyToOutputDirectory>Never</CopyToOutputDirectory>
		</None>
		<None Include="app.Debug.config">
			<DependentUpon>app.config</DependentUpon>
			<SubType>Designer</SubType>
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<None Include="app.DebugService.config">
			<DependentUpon>app.config</DependentUpon>
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<None Include="app.Release.config">
			<DependentUpon>app.config</DependentUpon>
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<None Include="app.Test.config">
			<DependentUpon>app.config</DependentUpon>
			<SubType>Designer</SubType>
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<None Include="Images\Main.ico">
			<Pack>True</Pack>
			<PackagePath></PackagePath>
		</None>
	</ItemGroup>
	<ItemGroup>
		<Reference Update="System">
			<Private>True</Private>
		</Reference>
	</ItemGroup>
	<ItemGroup>
		<AppDesigner Include="Properties\" />
	</ItemGroup>
	<ItemGroup>
		<ApplicationDefinition Include="Main\MainApplication.xaml" />
	</ItemGroup>
	<ItemGroup>
		<ProjectReference Include="..\RCS.WpfShop.AdventureWorks.Mock\RCS.WpfShop.AdventureWorks.Mock.csproj" />
		<ProjectReference Include="..\RCS.WpfShop.AdventureWorks\RCS.WpfShop.AdventureWorks.csproj" />
		<ProjectReference Include="..\RCS.WpfShop.Common\RCS.WpfShop.Common.csproj" />
		<ProjectReference Include="..\RCS.WpfShop.Resources\RCS.WpfShop.Resources.csproj" />
	</ItemGroup>
	<ItemGroup>
		<BootstrapperPackage Include=".NETFramework,Version=v4.8">
			<Visible>False</Visible>
			<ProductName>Microsoft .NET Framework 4.8 %28x86 and x64%29</ProductName>
			<Install>true</Install>
		</BootstrapperPackage>
		<BootstrapperPackage Include="Microsoft.Net.Framework.3.5.SP1">
			<Visible>False</Visible>
			<ProductName>.NET Framework 3.5 SP1</ProductName>
			<Install>false</Install>
		</BootstrapperPackage>
	</ItemGroup>
	<ItemGroup>
		<Resource Include="Images\Main.ico" />
	</ItemGroup>
	<ItemGroup>
		<PackageReference Include="Microsoft.CSharp" Version="4.7.0" />
		<PackageReference Include="Prism.Unity" Version="8.1.97" />
		<PackageReference Include="System.Threading.Tasks.Extensions" Version=" 4.5.4" />
		<PackageReference Include="Unity.Configuration" Version="5.11.2" />
	</ItemGroup>
	<PropertyGroup />
	<PropertyGroup>
		<PostBuildEvent>
			if $(Configuration) == Release (
			rem Cleanup some unexpected files.

			rem Documentation files. Do not know why they are put there.
			rem Currently not found. Disabled to prevent messages..
			rem del "$(TargetDir)*.xml"

			del "$(TargetDir)*.pdb"
			)
		</PostBuildEvent>
		<Nullable>enable</Nullable>
		<Authors>RCS</Authors>
		<Product>Cyclone - Wpf</Product>
		<NeutralLanguage>en-GB</NeutralLanguage>
		<Copyright>Copyright © RCS</Copyright>
		<PackageIcon>Main.ico</PackageIcon>
		<Version>0.22.0</Version>
	</PropertyGroup>

	<UsingTask TaskName="TransformXml" AssemblyFile="$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\Web\Microsoft.Web.Publishing.Tasks.dll" />
	<Target Name="app_config_AfterCompile" AfterTargets="AfterCompile" Condition="Exists('app.$(Configuration).config')">
		<!--Generate transformed app config in the intermediate directory-->
		<TransformXml Source="app.config" Destination="$(IntermediateOutputPath)$(TargetFileName).config" Transform="app.$(Configuration).config" />
		<!--Force build process to use the transformed configuration file from now on.-->
		<ItemGroup>
			<AppConfigWithTargetPath Remove="App.config" />
			<AppConfigWithTargetPath Include="$(IntermediateOutputPath)$(TargetFileName).config">
				<TargetPath>$(TargetFileName).config</TargetPath>
			</AppConfigWithTargetPath>
		</ItemGroup>
	</Target>
	<!--Override After Publish to support ClickOnce AfterPublish. Target replaces the untransformed config file copied to the deployment directory with the transformed one.-->
	<Target Name="app_config_AfterPublish" AfterTargets="AfterPublish" Condition="Exists('app.$(Configuration).config')">
		<PropertyGroup>
			<DeployedConfig>$(_DeploymentApplicationDir)$(TargetName)$(TargetExt).config$(_DeploymentFileMappingExtension)</DeployedConfig>
		</PropertyGroup>
		<!--Publish copies the untransformed App.config to deployment directory so overwrite it-->
		<Copy Condition="Exists('$(DeployedConfig)')" SourceFiles="$(IntermediateOutputPath)$(TargetFileName).config" DestinationFiles="$(DeployedConfig)" />
	</Target>
</Project>